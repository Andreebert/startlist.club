@using FlightJournal.Web.Extensions
@model FlightJournal.Web.Models.PilotReportViewModel
@{
    ViewBag.Title = "Pilot logbog";
}

<h2>Pilot logbog @Model.Year-@(Model.Year-1)</h2>


<h3>
    Pilot statistik <small>@Model.Pilot.Name</small>
</h3>
<table class="tablesorter table table-striped table-hover table-condensed table-bordered">
    <thead>
        <tr>
            <th>
                Forsæde/Bagsæde
            </th>
            <th>
                Antal
            </th>
            <th>
                Flyvetid
            </th>
            <th colspan="2">
                Jan
            </th>
            <th colspan="2">
                Feb
            </th>
            <th colspan="2">
                Mar
            </th>
            <th colspan="2">
                Apr
            </th>
            <th colspan="2">
                Maj
            </th>
            <th colspan="2">
                Jun
            </th>
            <th colspan="2">
                Jul
            </th>
            <th colspan="2">
                Aug
            </th>
            <th colspan="2">
                Sep
            </th>
            <th colspan="2">
                Okt
            </th>
            <th colspan="2">
                Nov
            </th>
            <th colspan="2">
                Dec
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in from c in Model.Flights.Where(f=>f.PilotId == Model.Pilot.PilotId)
            group c by new { c.Pilot } into g
            select new { Pilot = g.Key.Pilot, Count = g.Count(), ItemFlights = g })
        {
            <tr>
                <td>
                    @item.Pilot.Name
                </td>
                <td align="right">
                    @item.Count
                </td>
                <td align="right">
                    @item.ItemFlights.Sum(f=>f.FlightTime().Ticks).TotalHoursWithMinutesAsDecimal()
                </td>
                @for (int i = 1; i <= 12; i++)
                {
                    var count = item.ItemFlights.Count(f => f.Date.Month == i);
                    <td align="right">
                        @((count>0)?count.ToString():"")
                    </td>
                    <td align="right">
                        @item.ItemFlights.Where(f => f.Date.Month == i).Sum(f=>f.FlightTime().Ticks).TotalHoursWithMinutesAsDecimal()
                    </td>
                }
            </tr>
        }
        @foreach (var item in from c in Model.Flights.Where(f=>f.PilotBackseatId == Model.Pilot.PilotId)
                             group c by new { c.PilotBackseat } into g
                             select new { Pilot = g.Key.PilotBackseat, Count = g.Count(), ItemFlights = g })
        {
            <tr>
                <td>
                    @item.Pilot.Name (bagsæde)
                </td>
                <td align="right">
                    @item.Count
                </td>
                <td align="right">
                    @item.ItemFlights.Sum(f=>f.FlightTime().Ticks).TotalHoursWithMinutesAsDecimal()
                </td>
                @for (int i = 1; i <= 12; i++)
                {
                    var count = item.ItemFlights.Count(f => f.Date.Month == i);
                    <td align="right">
                        @(count != 0 ? count.ToString() : "")
                    </td>
                    <td align="right">
                        @item.ItemFlights.Where(f => f.Date.Month == i).Sum(f=>f.FlightTime().Ticks).TotalHoursWithMinutesAsDecimal()
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

<h2>
    Logbøger <small>@Model.Pilot.Name</small>
</h2>
<div class="row">
    <div class="col-md-6">
        <table class="tablesorter table table-striped table-hover table-condensed">
            <thead>
                <tr>
                    <th>
                        Fly
                    </th>
                    <th>
                        Forsæde
                    </th>
                    <th>
                        Antal
                    </th>
                    <th>
                        Flyvetid
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in from c in Model.Flights
                                     where c.PilotId == Model.Pilot.PilotId
                                     group c by new { c.Pilot, c.Plane } into g
                                     select new { Pilot = g.Key.Pilot, Plane = g.Key.Plane, Count = g.Count(), ItemFlights = g })
                {
                    <tr>
                        <td>
                            @item.Plane
                        </td>
                        <td>
                            @item.Pilot.Name
                        </td>
                        <td align="right">
                            @item.Count
                        </td>
                        <td align="right">
                            @item.ItemFlights.Sum(f=>f.FlightTime().Ticks).TotalHoursWithMinutesAsDecimal()
                        </td>
                    </tr>
                }
            </tbody>
        </table>
</div>
    <div class="col-md-6">
        <table class="tablesorter table table-striped table-hover table-condensed">
            <thead>
                <tr>
                    <th>
                        Fly
                    </th>
                    <th>
                        Bagsæde
                    </th>
                    <th>
                        Antal
                    </th>
                    <th>
                        Flyvetid
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in from c in Model.Flights
                                     where c.PilotBackseatId == Model.Pilot.PilotId
                                     group c by new { c.PilotBackseat, c.Plane } into g
                                     select new { PilotBackseat = g.Key.PilotBackseat, Plane = g.Key.Plane, Count = g.Count(), ItemFlights = g })
                {
                    <tr>
                        <td>
                            @item.Plane
                        </td>
                        <td>
                            @item.PilotBackseat.Name
                        </td>
                        <td align="right">
                            @item.Count
                        </td>
                        <td align="right">
                            @item.ItemFlights.Sum(f=>f.FlightTime().Ticks).TotalHoursWithMinutesAsDecimal()
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<br style="page-break-after: always;" />
<h2>
    Startlister <small>@Model.Pilot.Name</small>
</h2>
<table class="tablesorter table table-responsive table-striped table-hover table-condensed">
    <thead>
        <tr>
            <th>
                Dato
            </th>
            <th>
                Fly
            </th>
            <th>
                Pilote(r)
            </th>
            <th>
                Start
            </th>
            <th>
                Landing
            </th>
            <th>
                Flyvetid
            </th>
            <th class="hidden-sm">
                Flyveplads
            </th>
            <th class="hidden-sm">
                Tacho
            </th>
            <th class="hidden-xs">
                Note
            </th>
            <th>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Flights.OrderByDescending(d=>d.Departure))
        {
            <tr>
                <td>
                    @item.Date.ToShortDateString()
                </td>
                <td>
                    <span class="hidden-xs">@item.Plane</span>
                    <span class="visible-xs">@item.Plane.CompetitionId</span>
                </td>
                <td>
                    @item.Pilot.Name
                    @if (item.PilotBackseat != null)
                    {
                        <text> / </text>@item.PilotBackseat.Name
                    }
                    @if ((item.Betaler != null) && (item.Betaler != item.Pilot))
                    {
                        <text> (</text>@item.Betaler.Name<text> betaler)</text>
                    }
                </td>
                <td>
                    @if (item.Departure.HasValue)
                    {
                        @item.Departure.Value.ToString("HH:mm");
                    }
                </td>
                <td>
                    @if (item.Landing.HasValue)
                    {
                        @item.Landing.Value.ToString("HH:mm");
                    }
                </td>
                <td>
                    @item.FlightTime().TotalHoursWithMinutesAsDecimal()
                </td>
                <td class="hidden-sm">
                    @item.StartedFrom.Name
                    @if ((item.LandedOn != null) && (item.LandedOn.Name != item.StartedFrom.Name))
                    {
                        <text>, </text>
                        @item.LandedOn.Name
                    }
                </td>
                <td class="hidden-sm">
                    @Html.Partial("DisplayTemplates/_TachoPartial", item)
                </td>
                <td class="hidden-xs">
                    @Html.DisplayFor(modelItem => item.Description, "Description")
                </td>
                <td>
                    @Html.ActionLink("Detaljer", "Details", "Flight", new { id = item.FlightId }, new { @class = "btn btn-info" })
                </td>
            </tr>
        }
    </tbody>
</table>

@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            $(".tablesorter").tablesorter();
        });
    </script>
}


@using FlightJournal.Web.Configuration
@using FlightJournal.Web.Models
@using FlightJournal.Web.Extensions
@using Microsoft.AspNet.Identity
@model FlightJournal.Web.Models.LoginViewModel
@{
    ViewBag.Title = _("Login");
}
<h2>@ViewBag.Title</h2>

<div class="bs-example bs-example-tabs" role="tabpanel" data-example-id="togglable-tabs">
    <ul id="myTab" class="nav nav-tabs" role="tablist">
        @if (ViewBag.EnableDemo)
        {
            <li role="presentation" class="@(Model.LoginState==LoginViewModel.State.Demo?"active":"")"><a href="#demo" id="demo-tab" role="tab" data-toggle="tab" aria-controls="demo" aria-expanded="false">@_("Demo login")</a></li>
}
        <li role="presentation" class="@(Model.LoginState == LoginViewModel.State.Login ? "active" : "")"><a href="#profile" id="profile-tab" role="tab" data-toggle="tab" aria-controls="home" aria-expanded="true">@_("Email login")</a></li>
        @if (ViewBag.EnableMobil)
        {
            <li role="presentation" class="@(Model.LoginState==LoginViewModel.State.TokenLogin?"active":"")"><a href="#mobile" role="tab" id="mobile-tab" data-toggle="tab" aria-controls="mobile" aria-expanded="false">@_("Mobil login")</a></li>
}
    </ul>
    <div id="myTabContent" class="tab-content">

        @*Validate if any demo accounts are active in the system*@
        @if (ViewBag.EnableDemo)
        {
            <div role="tabpanel" class="tab-pane fade @(Model.LoginState==LoginViewModel.State.Demo?"active":"") in" id="demo" aria-labelledby="demo-tab">
                <div class="row">
                    <div class="col-md-8">
                        <h4>@_("Live Demo Accounts (and Passwords)")</h4>
                        <hr />
                        <div class="form-group">

                            <div class="col-md-offset-2 col-md-10">
                                <ul style="list-style-type: square">
                                    @foreach (Demo.DemoMembership demo in ViewBag.LiveDemoMemberships)
                                    {
                                        <li><a href="javascript:autologin('@demo.Name','@demo.Password');">@demo.Name (@demo.Password)</a></li>
                                    }
                                </ul>

                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <h4>@_("Autologin Enabled")</h4>
                        <hr />
                        <div class="alert alert-warning">
                            @_("Autologin by clicking account")<br /><span class="glyphicon glyphicon-alert"></span> <em>@_("Remember to remove accounts in production")</em>
                        </div>
                    </div>
                </div>
            </div>
        }

        <div role="tabpanel" class="tab-pane fade @(Model.LoginState == LoginViewModel.State.Login ? "active" : "") in" id="profile" aria-labelledby="profile-tab">

            <div class="row">
                <div class="col-md-8">
                    <section id="loginForm">
                        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <h4>@_("Use a local account to log in.")</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(m => m.Email, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Password, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-4 col-md-10">
                                    <div class="checkbox">
                                        @Html.CheckBoxFor(m => m.RememberMe)
                                        @Html.LabelFor(m => m.RememberMe)
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-4 col-md-10">
                                    @*<input type="submit" value="Log in" class="btn btn-default" />*@
                                    <button class="btn btn-primary" onclick=" this.form.submit(); " name="button" type="submit" id="Login">
                                        <span class="glyphicon glyphicon-ok"></span>
                                        @_("Login")
                                    </button>
                                    <br /><br />
                                    <p>
                                        @Html.ActionLink(_("Register a new user?"), "Register")
                                    </p>
                                    <p>
                                        @Html.ActionLink(_("Forget your password?"), "ForgotPassword")
                                    </p>
                                </div>
                            </div>
                        }
                    </section>
                </div>
                <div class="col-md-4">
                    <section id="socialLoginForm">
                        @Html.Partial("_ExternalLoginsListPartial", new FlightJournal.Web.Models.ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
                    </section>
                </div>
            </div>

        </div>

        @if (ViewBag.EnableMobil)
        {
            <div role="tabpanel" class="tab-pane @(Model.LoginState==LoginViewModel.State.TokenLogin?"active":"") fade in" id="mobile" aria-labelledby="mobile-tab">

                <div class="row">
                    <div class="col-md-8">
                        <section id="tokenLoginForm">
                            @using (Html.BeginForm("TokenLogin", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                <h4>@_("Sign-in with sms code")</h4>
                                <hr />
                                if (!Model.MobilNumberValidated)
                                {
                                    string mobilePlaceholder = "11223344 or " + Request.PhoneNumberInternationalPrefix() + "11223344";

                                    <div class="form-group">
                                        @Html.LabelFor(m => m.MobilNumber, new { @class = "col-md-4 control-label" })
                                        <div class="col-md-8">
                                            @Html.TextBoxFor(m => m.MobilNumber, new { @class = "form-control", placeholder = mobilePlaceholder })
                                            @Html.ValidationMessageFor(m => m.MobilNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-offset-4 col-md-10">
                                            <button class="btn btn-primary" onclick=" this.form.submit(); " name="button" type="submit" id="SendCode">
                                                <span class="glyphicon glyphicon-phone"></span>
                                                @_("Send code")
                                            </button>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    @Html.HiddenFor(m => m.MobilNumber)
                                    @Html.HiddenFor(m => m.MobilNumberValidated)
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VerifyCode, new { @class = "col-md-4 control-label" })
                                        <div class="col-md-8">
                                            @Html.TextBoxFor(m => m.VerifyCode, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.VerifyCode, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-offset-4 col-md-10">
                                            <button class="btn btn-success" onclick=" this.form.submit(); " name="button" type="submit" id="ValidateCode">
                                                <span class="glyphicon glyphicon-ok"></span>
                                                @_("Validate code sent to ") @Model.MobilNumber
                                            </button>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-offset-4 col-md-10">
                                            <div class="checkbox">
                                                @Html.CheckBoxFor(m => m.RememberBrowser)
                                                @Html.LabelFor(m => m.RememberBrowser)
                                            </div>
                                        </div>
                                    </div>
                                }

                            }
                        </section>
                    </div>


                </div>

            </div>
        }
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @if (ViewBag.LiveDemoMemberships != null
         && ViewBag.LiveDemoMemberships.Count > 0)
    {
        <script>
            function autologin(username, password) {
                $("#Email").val(username);
                $("#Password").val(password);
                $("#Login").click();
            }
        </script>
    }
}

@section head {
    <style>
        .tab-pane {
            padding-top: 10px;
        }
    </style>
}

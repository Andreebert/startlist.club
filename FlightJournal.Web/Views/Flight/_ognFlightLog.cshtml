@using FlightJournal.Web
@using FlightJournal.Web.Extensions
@model IEnumerable<OGN.FlightLog.Client.Models.Flight>

@helper TruncateDate(DateTime input)
{
    if (input.Year == DateTime.Today.Year)
    {
        @(input.ToString("ddd. ") + input.ToString("m"));
    }
    else
    {
        @input.ToShortDateString()
    }
}

@{
    ViewBag.Title = "Startlisten / OGN FlightLog / FLARM";
    var icao = Request.Club().Location.ICAO;
}
<br/>

<fieldset>
    <legend>OGN FlightLog / FLARM Radar / <a href="http://live.glidernet.org/flightlog/index.php?a=@icao">Live</a></legend>
    @{ 
        string json = ViewBag.OgnFlightLogSource;
        string source = json.Remove(json.Length-2);
    }
    <span class="pull-right" style="color:lightgray;"><a href="@(source)" title="Der kan gå op til 20 minutter før ændringer fra kilden kan ses her">kilde</a>/<a href="@(json)" title="Der kan gå op til 20 minutter før ændringer fra kilden kan ses her">json</a></span>
    <table class="table table-striped table-hover table-condensed">
        <tr>
            <th>
                #
            </th>
            <th>
                (@_("Motor"))
                @_("Glider")

            </th>
            <th>
                @_("Take-off")
            </th>
            <th>
                @_("Glider")
                @_("Landing")
            </th>
            <th>
                @_("Glider")
                @_("Time")
            </th>
            <th>
                @_("Plane")
                @_("Landing")
            </th>
            <th>
                @_("Plane")
                @_("Time")
            </th>
        </tr>
        @foreach (var item in Model.OrderByDescending(f => f.row))
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.row)
                    <small style="color:lightgrey">@Html.DisplayFor(modelItem => item.ID)</small>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.glider)
                    @if (!item.plane.IsEmpty())
                    {
                        Html.DisplayFor(modelItem => item.plane);
                    }
                </td>
                <td>
                    @if (item.takeoff.HasValue)
                    {
                        @item.takeoff.Value.ToString("HH:mm:ss zz")
                    }
                </td>
                <td>
                    @if (item.glider_landing.HasValue)
                    {
                        @item.glider_landing.Value.ToString("HH:mm:ss zz")
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.glider_time)
                </td>
                <td>
                    @if (item.plane_landing.HasValue)
                    {
                        @item.plane_landing.Value.ToString("HH:mm:ss zz")
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.plane_time)
                </td>
            </tr>
        }
    </table>

    @if (!String.IsNullOrWhiteSpace(ViewBag.OgnFlightLogException))
    {
        <strong>Parsing from OGN failed (@ViewBag.OgnFlightLogExceptionUrl)</strong><br />
        <textarea style="width: 100%;max-width:100%">@ViewBag.OgnFlightLogException</textarea>
    }
</fieldset>
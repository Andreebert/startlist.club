@model IEnumerable<FlightJournal.Web.Models.FlightVersionHistory>

@helper TruncateDate(DateTime input)
{
    if (input.Year == DateTime.Today.Year) {
        @(input.ToString("ddd. ") + input.ToString("m"));
    }
    else
    {
        @input.ToShortDateString()
    }
}

@{
    ViewBag.Title = "Startlisten / Historik";
}
<h2>Historik</h2>

<fieldset>
    <legend>Flight</legend>

    <table class="table table-striped table-hover table-condensed">
        <tr>
            <th>
                Rettet
            </th>
            <th>
                Af
            </th>
            <th>
                Dato
            </th>

            <th>
                Fly
            </th>
            <th>
                Pilote(r)
            </th>
            <th>
                Start
            </th>
            <th>
                Landing
            </th>
            <th>
                Start metode
            </th>
            <th>
                Flyveplads
            </th>
            <th>
                Tacho
            </th>
            <th>
                Note
            </th>
            <th></th>
        </tr>
        @foreach (var item in Model)
        {

            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastUpdatedBy)
                </td>
                <td>
                    @TruncateDate(item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Plane)
                </td>
                <td>
                    @item.Pilot.Name
                    @if (item.PilotBackseat != null)
                    {
                        <text>/ </text>@item.PilotBackseat.Name
                    }
                    @if ((item.Betaler != null) && (item.Betaler != item.Pilot))
                    {
                        <text> (</text>@item.Betaler.Name<text> betaler)</text>
                    }
                    @if ((item.Betaler == null) && (item.Pilot != null))
                    {
                        <text> (mangler betaler) </text>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Departure)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Landing)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartedFrom.Name)
                    @if ((item.LandedOn != null) && (item.LandedOn.Name != item.StartedFrom.Name))
                    {
                        <text>, </text>
                        @Html.DisplayFor(modelItem => item.LandedOn.Name)
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TachoDeparture)
                    @if (item.TachoDeparture.HasValue && item.TachoLanding.HasValue)
                    {
                        <text> / </text>
                    }
                    @Html.DisplayFor(modelItem => item.TachoLanding)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description, "Description")
                </td>
                <td>
                    @if (@item.State != "Added")
                    {
                        @item.State
                    }
                </td>
            </tr>
        }
    </table>
</fieldset>
<p>
    @if (Request.IsAuthenticated) {
        bool isEditable = false;
        if (Context.User.IsInRole("Administrator")) { isEditable = true; }
        if (Context.User.IsInRole("Editor")) { isEditable = true; }
        if (isEditable)
        {
            @Html.ActionLink("Rediger", "Edit", new { id = ViewBag.FlightId }, new { @class = "btn btn-default" })
            <text> | </text>
            @Html.ActionLink("Slet", "Delete", new { id = ViewBag.FlightId }, new { @class = "btn btn-danger" })
            <text> | </text>
        }
    }
    <a href="/" class="back">Tilbage til listen</a>
</p>
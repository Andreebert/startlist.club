@using FlightJournal.Web
@using FlightJournal.Web.Extensions
@model FlightJournal.Web.Models.Flight
@{
    ViewBag.Title = "Edit";
}
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Rediger flyvning</legend>
        @if (Model.Deleted.HasValue)
        {
            <div class="row">
                <div class="col-md-4">
                    <div class="alert alert-danger">
                        <h4>Deleted @Model.Deleted.ToString() by @Model.LastUpdatedBy</h4>
                        <div class="btn-group">
                            @Html.ActionLink(_("Undo Delete"), "Enable", new { id = Model.FlightId, UrlReferrer = ViewBag.UrlReferrer }, new { @class = "btn btn-default btn-danger" })
                            <a href="@ViewBag.UrlReferrer" class="btn btn-default">@_("Back")</a>
                        </div>
                    </div>
                </div>
            </div>
        }
        @Html.HiddenFor(model => model.FlightId)
        @Html.Hidden("UrlReferrer", (string)ViewBag.UrlReferrer)
        <div class="row">
            <div class="col-md-4 col-sm-6 col-xs-12">
                <div class="editor-label">
                    @Html.LabelFor(model => model.Date)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Date)
                    @Html.ValidationMessageFor(model => model.Date)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Departure)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Departure)
                    @Html.ValidationMessageFor(model => model.Departure)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Landing)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Landing)
                    @Html.ValidationMessageFor(model => model.Landing)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.PlaneId)
                </div>
                <div class="editor-field">
                    @Html.ExtendedDropDownListFor(model => model.PlaneId, (IEnumerable<ExtendedSelectListItem>)ViewBag.PlaneId, "")
                    @Html.ValidationMessageFor(model => model.PlaneId)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.BetalerId)
                </div>
                <div class="editor-field">
                    @Html.DropDownList("BetalerId", String.Empty)
                    @Html.ValidationMessageFor(model => model.BetalerId)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.PilotId)
                </div>
                <div class="editor-field">
                    @Html.DropDownList("PilotId", String.Empty)
                    @Html.ValidationMessageFor(model => model.PilotId)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.PilotBackseatId)
                </div>
                <div class="editor-field">
                    @Html.DropDownList("PilotBackseatId", String.Empty)
                    @Html.ValidationMessageFor(model => model.PilotBackseatId)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Description)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Description)
                    @Html.ValidationMessageFor(model => model.Description)
                </div>
            </div>
            <div class="col-md-4 col-sm-6 col-xs-12">
                <div class="editor-label">
                    @Html.LabelFor(model => model.StartTypeId)
                </div>

                <div class="editor-field">
                    @Html.DropDownList("StartTypeId", String.Empty)
                    @Html.ValidationMessageFor(model => model.StartTypeId)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.StartedFromId)
                </div>
                <div class="editor-field">
                    @Html.DropDownList("StartedFromId", String.Empty)
                    @Html.ValidationMessageFor(model => model.StartedFromId)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.LandedOnId)
                </div>
                <div class="editor-field">
                    @Html.DropDownList("LandedOnId", String.Empty)
                    @Html.ValidationMessageFor(model => model.LandedOnId)
                </div>
            </div>
            <!-- Add the extra clearfix for only the required viewport -->
            <div class="clearfix visible-sm visible-xs"></div>
            <div class="col-md-4 col-sm-12 visible-sm visible-xs">
                <div class="btn-group btn-group-lg ">
                    <input type="submit" value="Gem" class="btn btn-primary"/>
                </div>
            </div>

            <div class="col-md-4 col-sm-12">
                <div class="editor-label">
                    @Html.LabelFor(model => model.TachoDeparture)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.TachoDeparture)
                    @Html.ValidationMessageFor(model => model.TachoDeparture)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.TachoLanding)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.TachoLanding)
                    @Html.ValidationMessageFor(model => model.TachoLanding)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.LandingCount)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.LandingCount)
                    @Html.ValidationMessageFor(model => model.LandingCount)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.TaskDistance)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.TaskDistance)
                    @Html.ValidationMessageFor(model => model.TaskDistance)
                </div>

                
            </div>

        </div>
        
        <div class="row" style="margin-top: 30px">
            <div class="col-md-2">
                <div class="btn-group btn-group-lg">
                    <input type="submit" value="@_("Save")" class="btn btn-primary"/>
                    <a href="@ViewBag.UrlReferrer" class="btn btn-default">@_("Back")</a>
                </div>
            </div>
            <div class="col-md-10">
                <div class="btn-group btn-group-lg">
                    @if (!Model.Deleted.HasValue)
                    {
                        @Html.ActionLink(_("Delete"), "Disable", new { id = Model.FlightId, UrlReferrer = ViewBag.UrlReferrer }, new { @class = "btn btn-default" })
                    }
                    else
                    {
                        @Html.ActionLink(_("Undo Delete"), "Enable", new { id = Model.FlightId, UrlReferrer = ViewBag.UrlReferrer }, new { @class = "btn btn-default btn-danger" })
                        if (User.IsEditor())
                        {
                            @Html.ActionLink(_("Delete permanently"), "Delete", new { id = Model.FlightId }, new { @class = "btn btn-default" })
                        }
                    }
                </div>
            </div>

        </div>
    </fieldset>
}
@Html.Partial("_changeHistory", (IEnumerable<FlightJournal.Web.Models.FlightVersionHistory>)ViewBag.ChangeHistory)
@if (ViewBag.OgnFlightLog != null)
{
    @Html.Partial("_ognFlightLog", (IEnumerable<OGN.FlightLog.Client.Models.Flight>)ViewBag.OgnFlightLog)
}

@section scripts
{
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.editorhookup.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.autocomplete-combobox.js")" type="text/javascript"></script>
    <script>
        $(function () {
            $("#PlaneId").combobox();
            $("#PilotId").combobox();
            $("#PilotBackseatId").combobox();
            $("#BetalerId").combobox();
            $("#StartTypeId").combobox();
            $("#StartedFromId").combobox();
            $("#LandedOnId").combobox();
        });
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $(".ui-autocomplete-input.ui-widget.ui-widget-content.ui-corner-left").css("border", "3px solid #888");
            $("#Landing").focus();
        }
    );
    </script>
}


@model FlightLog.ViewModels.Report.ReportViewModel
@{
    ViewBag.Title = "Månedsrapport";
}
<p>
    <a href="@Url.Content("~/")@Model.Date.ToString("yyyy")" class="awesomeBtn">@Model.Date.ToString("yyyy")</a>
    <a href="@Url.Content("~/")@Model.Date.AddMonths(-1).ToString("yyyy-MM")" class="awesomeBtn">@Model.Date.AddMonths(-1).ToString("MMMM")</a>
    <a href="@Url.Content("~/")@Model.Date.ToString("yyyy-MM")" class="awesomeBtn"><strong>@Model.Date.ToString("MMMM")</strong></a>
    @if (DateTime.Today > Model.Date.AddMonths(1))
    {
        <a href="@Url.Content("~/")@Model.Date.AddMonths(1).ToString("yyyy-MM")" class="awesomeBtn">@Model.Date.AddMonths(1).ToString("MMMM")</a>
    }
    @if (DateTime.Today.Year >= Model.Date.AddYears(1).Year)
    {
        <a href="@Url.Content("~/")@Model.Date.AddYears(1).ToString("yyyy")" class="awesomeBtn">@Model.Date.AddYears(1).ToString("yyyy")</a>
    }
</p>

<h2>
    Statistik for @Model.Date.ToString("MMMM yyyy")</h2>
<table>
    <tr>
        <td>
            Flyvedage
        </td>
        <td align="right">@Model.Flights.Select(s => s.Date).Distinct().Count()
        </td>
    </tr>
    <tr>
        <td>
            Starter
        </td>
        <td align="right">@Model.Flights.Count()
        </td>
    </tr>
    <tr>
        <td>
            Flyvetid
        </td>
        <td align="right">@(new DateTime(@Model.Flights.ToList()
                                .Select(f => new { myTime = f.Landing.HasValue && f.Departure.HasValue && f.Landing.Value > f.Departure.Value ? f.Landing.Value.Subtract(f.Departure.Value).Ticks : (long)0 })
                                .Sum(f => f.myTime)).ToString("HH:mm"))
        </td>
    </tr>
    <tr>
        <td>
            Piloter
        </td>
        <td align="right">@Model.Flights.Select(s => s.Pilot).Union(Model.Flights.Where(s => s.PilotBackseat != null).Select(s => s.PilotBackseat).Distinct()).Distinct().Count()
        </td>
    </tr>
    <tr>
        <td>
            Stræk opgaver
        </td>
        <td align="right">@Model.Flights.Where(w => w.TaskDistance.HasValue && w.TaskDistance.Value > 0).Count()
        </td>
    </tr>
    <tr>
        <td>
            Stræk Km
        </td>
        <td align="right">@Model.Flights.Where(w => w.TaskDistance.HasValue && w.TaskDistance.Value > 0).Sum(d => d.TaskDistance)
        </td>
    </tr>
</table>
<p>
    @Html.ActionLink("Eksporter startlisten for " + Model.Date.ToString("MMMM yyyy"), "Export", "Report", new { year = Model.Date.Year, month = Model.Date.Month }, new { @class = "awesomeBtn" })
</p>
<h2>
    Logbøger for @Model.Date.ToString("MMMM yyyy")</h2>

<table>
    <tr>
        <td valign="top">
            <table id="mySummary" class="tablesorter">
                <thead>
                    <tr>
                        <th>
                            Fly
                        </th>
                        <th>
                            Forsæde
                        </th>
                        <th>
                            Antal
                        </th>
                        <th>
                            Flyvetid
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in from c in Model.Flights
                                         group c by new { c.Plane, c.Pilot } into g
                                         select new { Plane = g.Key.Plane, Pilot = g.Key.Pilot, Count = g.Count(), ItemFlights = g })
                    {
                        <tr>
                            <td>
                                @item.Plane
                            </td>
                            <td>
                                @item.Pilot.Name
                            </td>
                            <td align="right">
                                @item.Count
                            </td>
                            <td align="right">
                                @(new DateTime(item.ItemFlights
                                .Select(f => new { myTime = f.Landing.HasValue && f.Departure.HasValue && f.Landing.Value > f.Departure.Value ? f.Landing.Value.Subtract(f.Departure.Value).Ticks : (long)0 })
                                .Sum(f => f.myTime)).ToString("HH:mm"))
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </td>
        <td valign="top">
            <table id="mySummary2" class="tablesorter">
                <thead>
                    <tr>
                        <th>
                            Fly
                        </th>
                        <th>
                            Bagsæde
                        </th>
                        <th>
                            Antal
                        </th>
                        <th>
                            Flyvetid
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in from c in Model.Flights
                                         where c.PilotBackseat != null
                                         group c by new { c.Plane, c.PilotBackseat } into g
                                         select new { Plane = g.Key.Plane, PilotBackseat = g.Key.PilotBackseat, Count = g.Count(), ItemFlights = g })
                    {
                        <tr>
                            <td>
                                @item.Plane
                            </td>
                            <td>
                                @item.PilotBackseat.Name
                            </td>
                            <td align="right">
                                @item.Count
                            </td>
                            <td align="right">
                                @(new DateTime(item.ItemFlights
                                .Select(f => new { myTime = f.Landing.HasValue && f.Departure.HasValue && f.Landing.Value > f.Departure.Value ? f.Landing.Value.Subtract(f.Departure.Value).Ticks : (long)0 })
                                .Sum(f => f.myTime)).ToString("HH:mm"))
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </td>
    </tr>
</table>
<script type="text/javascript">
    $(document).ready(function () {
        $("#mySummary").tablesorter();
        $("#mySummary2").tablesorter();
    }
);
</script>

<br style="page-break-after: always;" />
<h2>
    Startlister for @Model.Date.ToString("MMMM yyyy")</h2>
<table id="myTable" class="tablesorter">
    <thead>
        <tr>
            <th>
                Dato
            </th>
            <th>
                Fly
            </th>
            <th>
                Pilote(r)
            </th>
            <th>
                Start
            </th>
            <th>
                Landing
            </th>
            <th>
                Flyvetid
            </th>
            <th>
                Flyveplads
            </th>
            <th>
                Tacho
            </th>
            <th>
                Note
            </th>
            <th>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Flights)
        {
            <tr>
                <td>
                    @item.Date.ToShortDateString()
                </td>
                <td>
                    @item.Plane
                </td>
                <td>
                    @item.Pilot.Name
                    @if (item.PilotBackseat != null)
                    {
                        <text> / </text>@item.PilotBackseat.Name
                    }
                    @if ((item.Betaler != null) && (item.Betaler != item.Pilot))
                    {
                        <text> (</text>@item.Betaler.Name<text> betaler)</text>
                    }
                </td>
                <td>
                    @if (item.Departure.HasValue)
                    {
                        @item.Departure.Value.ToString("HH:mm");
                    }
                </td>
                <td>
                    @if (item.Landing.HasValue)
                    {
                        @item.Landing.Value.ToString("HH:mm");
                    }
                </td>
                <td>
                    @if (item.Departure != null && item.Landing != null && item.Landing.Value > item.Departure.Value)
                    {
                        @((new DateTime((item.Landing.Value - item.Departure.Value).Ticks)).ToString("H:mm"));
                    }
                </td>
                <td>
                    @item.StartedFrom.Name
                    @if ((item.LandedOn != null) && (item.LandedOn.Name != item.StartedFrom.Name))
                    {
                        <text>, </text>
                        @item.LandedOn.Name
                    }
                </td>
                <td>
                    @item.TachoDeparture
                    @if (item.Departure.HasValue && item.TachoLanding.HasValue && item.TachoLanding > 0)
                    {
                        <text> / </text>
                        @item.TachoLanding 
                        <text> (diff: </text>
                        @(item.TachoDeparture.Value - item.TachoLanding.Value);
                        <text> ) </text>
                    }
                </td>
                <td>
                    @if ((item.Description != null) && (item.Description.Length > 40))
                    {
                        @item.Description.Substring(0, 37).ToString()
                        <span title="[...]@item.Description.Substring(37).ToString()">
                            <text>[...]</text>
                        </span>
                    }
                    else
                    {
                        @item.Description
                    }
                </td>
                <td>
                    @Html.ActionLink("Detaljer", "Details", "Flight", new { id = item.FlightId }, new { @class = "awesomeBtn" })
                    @*@Html.ActionLink("Historik", "ChangeHistory", "Flight", new { id = item.FlightId }, new { @class = "awesomeBtn" })*@
                </td>
            </tr>
        }
    </tbody>
</table>
<script type="text/javascript">
    $(document).ready(function () {
        $("#myTable").tablesorter();
    }
);
</script>

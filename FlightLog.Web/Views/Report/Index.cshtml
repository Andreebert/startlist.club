@model FlightLog.ViewModels.Report.ReportViewModel
@{
    ViewBag.Title = "Dagsrapporter";
    int startNr = 0;
}
<!-- HACK: jquery 1.5.1 included because Inline DatePicker on Div fails in 1.4.4 (should have been working) -->
<script src="http://jqueryui.com/jquery-1.5.1.js"></script>
<script src="http://jqueryui.com/ui/jquery.ui.core.js"></script>
<script src="http://jqueryui.com/ui/jquery.ui.widget.js"></script>
<script src="http://jqueryui.com/ui/jquery.ui.datepicker.js"></script>
<script>

    $(document).ready(function () {

        function available(date) {
            dmy = date.getFullYear() + "-" + (date.getMonth() + 1) + "-" + date.getDate();
            @foreach (var item in Model.AvailableDates.Keys)
            {
            <text>if (dmy=="</text>@item.ToString("yyyy-M-d")<text>") return [true,"</text>@((Model.AvailableDates[item] > 20) ? "termik" : "")<text>", "</text>@Model.AvailableDates[item]<text> starter."];</text>
            } 
            return [false, "", "ingen flyvning"];
        }

        function selectDate(dmy) {
            // Redirect page to date report
            location = '/' + dmy;
        }
        
        $("#datepicker").datepicker({
            beforeShowDay: available,
            maxDate: 0,
            showWeek: true,
            numberOfMonths: 4,
            onSelect: selectDate,
            dateFormat: "yy-mm-dd",
            dayNamesMin: ['Sø', 'Ma', 'Ti', 'On', 'To', 'Fr', 'Lø']
        });

        $("#datepicker").datepicker("setDate", '@Model.Date.ToString("yyyy-MM-dd")');
    });
</script>
<style>
    .termik
    {
        font-weight: bold;
        background-color: Lime;
    }
</style>
<div align="center">
    <div id="datepicker" class="noprint">
    </div>
</div>
<br style="clear: both;" />
<h2>
    Startliste @Model.Date.ToShortDateString()</h2>
<table id="myTable" class="tablesorter">
    <thead>
        <tr>
            <th>
                Start nr.
            </th>
            <th>
                Fly
            </th>
            <th>
                Pilote(r)
            </th>
            <th>
                Start
            </th>
            <th>
                Landing
            </th>
            <th>
                Flyvetid
            </th>
            <th>
                Flyveplads
            </th>
            <th>
                Tacho
            </th>
            <th>
                Note
            </th>
            <th>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Flights)
        {
            <tr>
                <td>
                    @(++startNr)
                </td>
                <td>
                    @item.Plane
                </td>
                <td>
                    @item.Pilot.Name
                    @if (item.PilotBackseat != null)
                    {
                        <text>/ </text>@item.PilotBackseat.Name
                    }
                    @if ((item.Betaler != null) && (item.Betaler != item.Pilot))
                    {
                        <text> (</text>@item.Betaler.Name<text> betaler)</text>
                    }
                </td>
                <td>
                    @if (item.Departure.HasValue)
                    {
                        @item.Departure.Value.ToString("HH:mm");
                    }
                </td>
                <td>
                    @if (item.Landing.HasValue)
                    {
                        @item.Landing.Value.ToString("HH:mm");
                    }
                </td>
                <td>
                    @if (item.Departure.HasValue && item.Landing.HasValue)
                    {
                        if (item.Landing.Value > item.Departure.Value)
                        {
                            @((new DateTime((item.Landing.Value - item.Departure.Value).Ticks)).ToString("H:mm"));
                        }
                        else
                        {
                            <text><span class="error">Fejl: landing før start</span></text>
                        }
                    }
                </td>
                <td>
                    @item.StartedFrom.Name
                    @if ((item.LandedOn != null) && (item.LandedOn.Name != item.StartedFrom.Name))
                    {
                        <text>, </text>
                        @item.LandedOn.Name
                    }
                </td>
                <td>
                    @item.TachoDeparture
                    @if (item.Departure.HasValue && item.TachoLanding.HasValue && item.TachoLanding > 0)
                    {
                        <text> / </text>
                        @item.TachoLanding 
                        <text> (diff: </text>
                        @(item.TachoDeparture.Value - item.TachoLanding.Value);
                        <text> ) </text>
                    }
                </td>
                <td>
                    @if ((item.Description != null) && (item.Description.Length > 40))
                    {
                        @item.Description.Substring(0, 37).ToString()
                        <span title="[...]@item.Description.Substring(37).ToString()">
                            <text>[...]</text>
                        </span>
                    }
                    else
                    {
                        @item.Description
                    }
                </td>
                <td>
                    @Html.ActionLink("Rediger", "Edit", "Flight", new { id = item.FlightId }, new { @class = "awesomeBtn" })
                    @Html.ActionLink("Detaljer", "Details", "Flight", new { id = item.FlightId }, new { @class = "awesomeBtn" })
                    @Html.ActionLink("Historik", "ChangeHistory", "Flight", new { id = item.FlightId }, new { @class = "awesomeBtn" })
                    @Html.ActionLink("Slet", "Delete", "Flight", new { id = item.FlightId }, new { @class = "awesomeBtn" })
                </td>
            </tr>
        }
    </tbody>
</table>
<script type="text/javascript">
    $(document).ready(function () {
        $("#myTable").tablesorter();
    }
);
</script>
<p style="color: silver" class="noprint">
    <em>Rettelser kan udføres op til 24 timer efter registrering</em>
</p>
<br style="page-break-after: always;" />
<h2>
    Logbøger @Model.Date.ToShortDateString()</h2>
<h3>
    Fly</h3>
<table>
    <tr>
        <td valign="top">
            <table>
                <thead>
                    <tr>
                        <th>
                            Fly
                        </th>
                        <th>
                            Forsæde
                        </th>
                        <th>
                            Antal
                        </th>
                        <th>
                            Flyvetid
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in from c in Model.Flights
                                         group c by new { c.Plane, c.Pilot } into g
                                         select new { Plane = g.Key.Plane, Pilot = g.Key.Pilot, Count = g.Count(), ItemFlights = g })
                    {
                        <tr>
                            <td>
                                @item.Plane
                            </td>
                            <td>
                                @item.Pilot.Name
                            </td>
                            <td align="right">
                                @item.Count
                            </td>
                            <td align="right">
                                @(new DateTime(item.ItemFlights
                                .Select(f => new { myTime = f.Landing.HasValue && f.Departure.HasValue && f.Landing.Value > f.Departure.Value ? f.Landing.Value.Subtract(f.Departure.Value).Ticks : (long)0 })
                                .Sum(f => f.myTime)).ToString("HH:mm"))
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </td>
        <td valign="top">
            <table>
                <thead>
                    <tr>
                        <th>
                            Fly
                        </th>
                        <th>
                            Bagsæde
                        </th>
                        <th>
                            Antal
                        </th>
                        <th>
                            Flyvetid
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in from c in Model.Flights
                                         where c.PilotBackseat != null
                                         group c by new { c.Plane, c.PilotBackseat } into g
                                         select new { Plane = g.Key.Plane, PilotBackseat = g.Key.PilotBackseat, Count = g.Count(), ItemFlights = g })
                    {
                        <tr>
                            <td>
                                @item.Plane
                            </td>
                            <td>
                                @item.PilotBackseat.Name
                            </td>
                            <td align="right">
                                @item.Count
                            </td>
                            <td align="right">
                                @(new DateTime(item.ItemFlights
                                .Select(f => new { myTime = f.Landing.HasValue && f.Departure.HasValue && f.Landing.Value > f.Departure.Value ? f.Landing.Value.Subtract(f.Departure.Value).Ticks : (long)0 })
                                .Sum(f => f.myTime)).ToString("HH:mm"))
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </td>
    </tr>
</table>
<h3>
    Piloter</h3>
<table>
    <tr>
        <td valign="top">
            <table>
                <thead>
                    <tr>
                        <th>
                            Forsæde
                        </th>
                        <th>
                            Fly
                        </th>
                        <th>
                            Antal
                        </th>
                        <th>
                            Flyvetid
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in from c in Model.Flights
                                         group c by new { c.Pilot, c.Plane } into g
                                         select new { Pilot = g.Key.Pilot, Plane = g.Key.Plane, Count = g.Count(), ItemFlights = g })
                    {
                        <tr>
                            <td>
                                @item.Pilot.Name
                            </td>
                            <td>
                                @item.Plane
                            </td>
                            <td align="right">
                                @item.Count
                            </td>
                            <td align="right">
                                @(new DateTime(item.ItemFlights
                                .Select(f => new { myTime = f.Landing.HasValue && f.Departure.HasValue && f.Landing.Value > f.Departure.Value ? f.Landing.Value.Subtract(f.Departure.Value).Ticks : (long)0 })
                                .Sum(f => f.myTime)).ToString("HH:mm"))
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </td>
        <td valign="top">
            <table>
                <thead>
                    <tr>
                        <th>
                            Bagsæde
                        </th>
                        <th>
                            Fly
                        </th>
                        <th>
                            Antal
                        </th>
                        <th>
                            Flyvetid
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in from c in Model.Flights
                                         where c.PilotBackseat != null
                                         group c by new { c.PilotBackseat, c.Plane } into g
                                         select new { PilotBackseat = g.Key.PilotBackseat, Plane = g.Key.Plane, Count = g.Count(), ItemFlights = g })
                    {
                        <tr>
                            <td>
                                @item.PilotBackseat.Name
                            </td>
                            <td>
                                @item.Plane
                            </td>
                            <td align="right">
                                @item.Count
                            </td>
                            <td align="right">
                                @(new DateTime(item.ItemFlights
                                .Select(f => new { myTime = f.Landing.HasValue && f.Departure.HasValue && f.Landing.Value > f.Departure.Value ? f.Landing.Value.Subtract(f.Departure.Value).Ticks : (long)0 })
                                .Sum(f => f.myTime)).ToString("HH:mm"))
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </td>
    </tr>
</table>
<br />
<p>
    <a href="@Url.Content("~/")@Model.Date.ToString("yyyy")" class="awesomeBtn">Statistik for @Model.Date.ToString("yyyy")</a>
    @*<a href="@Url.Content("~/")@Model.Date.AddMonths(-1).ToString("yyyy-MM")" class="awesomeBtn">Statistik for @Model.Date.AddMonths(-1).ToString("MMMM")</a>*@
    <a href="@Url.Content("~/")@Model.Date.ToString("yyyy-MM")" class="awesomeBtn">Statistik for @Model.Date.ToString("MMMM")</a>
</p>